---
// import { Icon } from "astro-icon";

import ThemeSwitcher from "./ThemeSwitcher.astro";


const navItems = [
    { title: "About", url: "#about" },
    { title: "Links", url: "#links" },
    { title: "Work", url: "#work" },
    { title: "Referrals", url: "#referrals" },
];
---

<header id="page-header"
    class="absolute bottom-0 z-30 flex items-center justify-between w-full px-8 py-4 text-white border-b border-transparent">
    <a class="flex items-center gap-3 hover:!text-default" href="#">
        <div data-wordmark class="text-transparent transition-all duration-300 uppercase font-brand text-2xl">Ryan
            Rampersad</div>
    </a>
    <div>
        <div class="flex items-center gap-6">
            <nav class="hidden sm:block">
                <ul class="flex items-center gap-4">
                    {navItems.map(({ title, url }) => (
                    <li>
                        <a data-compass-link
                            class="text-sm bg-black rounded border border-transparent hover:border-white p-2 transition-all duration-200"
                            href={url}>
                            {title}
                        </a>
                    </li>
                    ))}
                </ul>
            </nav>
            <button id="open-nav-button" type="button" class="btn sm:hidden" aria-label="Navigation">
                <!-- <Icon pack="mdi" name="menu" class="h-8" /> -->
            </button>
            <ThemeSwitcher />
        </div>
        <div id="menu-modal" class="hidden modal" aria-hidden="true">
            <div class="fixed inset-0 px-8 py-4 bg-default">
                <div class="space-y-4" role="dialog" aria-modal="true">
                    <header class="text-right">
                        <button id="close-nav-button" type="button" class="btn" aria-label="Close navigation">
                            <!-- <Icon pack="mdi" name="close" class="h-8" /> -->
                        </button>
                    </header>
                    <div class="flex justify-center">
                        <!-- <Icon name="logomark" class="h-16" /> -->
                    </div>
                    <nav>
                        <ul class="flex flex-col">
                            {navItems.map(({ title, url }) => (
                            <li>
                                <a class="block py-4 text-xl text-center" href={url}>
                                    {title}
                                </a>
                            </li>
                            ))}
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</header>

<script>
    // import MicroModal from "micromodal";

    // const menuModalId = "menu-modal";

    const header: HTMLElement = document.querySelector("#page-header");
    const page = document.documentElement;
    // const menu = document.querySelector(`#${menuModalId} ul`);
    // const openNavButton = document.querySelector("#open-nav-button");
    // const closeNavButton = document.querySelector("#close-nav-button");

    // const openMenu = () => {
    //     MicroModal.show(menuModalId, { disableScroll: true });
    // };

    // const closeMenu = () => {
    //     MicroModal.close(menuModalId);
    // };

    // openNavButton.addEventListener("click", openMenu);
    // closeNavButton.addEventListener("click", closeMenu);

    document.addEventListener("scroll", () => {
        const d = page.clientHeight - page.scrollTop - header.offsetHeight;
        header.classList.toggle("fixed-header", d < 0);
    });

    // menu.addEventListener("click", (event) => {
    //     if ((event.target as HTMLElement).tagName === "A") {
    //         closeMenu();
    //     }
    // });
</script>

<style>
    .fixed-header {
        @apply fixed top-0 bottom-auto;
        @apply bg-gradient-to-b from-ryan-black;
        /* @apply text-default bg-default border-default; */
    }

    .fixed-header [data-wordmark] {
        @apply text-white;
    }

    .fixed-header [data-compass-link] {
        @apply bg-transparent transition-none border-transparent underline;
    }

    .modal.is-open {
        @apply block;
    }
</style>
